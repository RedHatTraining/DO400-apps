apiVersion: v1
kind: Template
metadata:
  name: shopping-cart-builder-template
  annotations:
    description: "Shopping Cart - Builder Template"
objects:
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        app: ${APP_NAME}
        app.kubernetes.io/component: ${APP_NAME}
        app.kubernetes.io/instance: ${APP_NAME}
      name: openjdk-11
    spec:
      lookupPolicy:
        local: false
      tags:
        - annotations:
            openshift.io/imported-from: registry.access.redhat.com/ubi8/openjdk-11:1.3-3
          from:
            kind: DockerImage
            name: registry.access.redhat.com/ubi8/openjdk-11:1.3-3
          generation: null
          importPolicy: {}
          name: 1.3-3
          referencePolicy:
            type: ""
    status:
      dockerImageRepository: ""
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        app: ${APP_NAME}
        app.kubernetes.io/component: ${APP_NAME}
        app.kubernetes.io/instance: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      lookupPolicy:
        local: false
    status:
      dockerImageRepository: ""
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        app: ${APP_NAME}
        app.kubernetes.io/component: ${APP_NAME}
        app.kubernetes.io/instance: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      postCommit: {}
      resources: {}
      source:
        contextDir: shopping-cart
        git:
          ref: ${GIT_REF}
          uri: ${GIT_REPOSITORY}
        type: Git
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: openjdk-11:1.3-3
        type: Source
      triggers: []
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${APP_NAME}
        app.kubernetes.io/component: ${APP_NAME}
        app.kubernetes.io/instance: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      replicas: 1
      selector:
        deploymentconfig: ${APP_NAME}
      strategy:
        resources: {}
      template:
        metadata:
          labels:
            deploymentconfig: ${APP_NAME}
        spec:
          containers:
            - image: image-registry.openshift-image-registry.svc:5000/${PROJECT_NAME}/${APP_NAME}:latest
              name: ${APP_NAME}
              imagePullPolicy: Always
              ports:
                - containerPort: 8080
                  protocol: TCP
                - containerPort: 8443
                  protocol: TCP
                - containerPort: 8778
                  protocol: TCP
              resources: {}
      test: false
      triggers: []
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${APP_NAME}
        app.kubernetes.io/component: ${APP_NAME}
        app.kubernetes.io/instance: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
        - name: 8443-tcp
          port: 8443
          protocol: TCP
          targetPort: 8443
        - name: 8778-tcp
          port: 8778
          protocol: TCP
          targetPort: 8778
      selector:
        deploymentconfig: ${APP_NAME}
  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: ${APP_NAME}
      labels:
        app: ${APP_NAME}
    spec:
      to:
        kind: Service
        name: ${APP_NAME}
      port:
        targetPort: 8080

parameters:
  - name: GIT_REPOSITORY
    description: "Git Repository"
    required: true
  - name: GIT_REF
    description: "Git Ref/Branch"
    required: true
  - name: PROJECT_NAME
    description: "Project Name"
    required: true
  - name: APP_NAME
    description: "APP Name"
    required: false
    value: "security-scans"
